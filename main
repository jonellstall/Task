class Task:
    def __init__(self, title, description, due_date):
        self.title = title
        self.description = description
        self.due_date = due_date

class TaskManager:
    def __init__(self):
        self.tasks = []
    
    def add_task(self, title, description, due_date):
        task = Task(title, description, due_date)
        self.tasks.append(task)
        print(f'Task "{title}" added.')
    
    def remove_task(self, title):
        for task in self.tasks:
            if task.title == title:
                self.tasks.remove(task)
                print(f'Task "{title}" removed.')
                return
        
        print(f'Task "{title}" not found.')
    
    def view_tasks(self):
        if self.tasks:
            print('Task List:')
            for task in self.tasks:
                print(f'Title: {task.title}')
                print(f'Description: {task.description}')
                print(f'Due Date: {task.due_date}')
        else:
            print('No tasks found.')
    
task_manager = TaskManager()

while True:
    print('\nTask Management System')
    print('1. Add task')
    print('2. Remove task')
    print('3. View tasks')
    print('4. Exit')

    choice = input('Select an option: ')

    if choice == '1':
        title = input('Enter the task title: ')
        description = input('Enter the task description: ')
        due_date = input('Enter the due date: ')
        task_manager.add_task(title, description, due_date)
    elif choice == '2':
        title = input('Enter the task title to remove: ')
        task_manager.remove_task(title)
    elif choice == '3':
        task_manager.view_tasks()
    elif choice == '4':
        break
    else:
        print('Invalid choice. Please try again.')
//这段代码实现了一个简单的任务管理系统的命令行应用程序。用户可以添加任务、删除任务，并查看任务列表。

//Task类表示一个任务，具有标题、描述和截止日期属性。TaskManager类管理任务列表，并提供添加、删除任务以及查看任务列表的功能。

//应用程序通过一个无限循环等待用户输入操作，并根据用户选择执行相应的操作。用户可以选择退出应用程序来结束程序运行。
